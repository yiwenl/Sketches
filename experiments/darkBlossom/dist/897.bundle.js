"use strict";(self.webpackChunkfxhash_boilerplate_webpack=self.webpackChunkfxhash_boilerplate_webpack||[]).push([[897],{891:(t,i,e)=>{e.r(i),e.d(i,{default:()=>l});var o=e(247),s=e(564),n=e.n(s);let h=!0;const r=()=>{h&&window.history.pushState("experiment","Title",window.location.origin+window.location.pathname+"?config="+JSON.stringify(o.Z))};let a=-1;const l={enabled:h,reload:()=>{h&&(window.location.href=window.location.origin+window.location.pathname+"?config="+JSON.stringify(o.Z))},reset:()=>{window.location.href=window.location.origin+window.location.pathname},refresh:r,delayReload:()=>{h&&(window.clearTimeout(a),a=window.setTimeout((()=>{window.location.href=window.location.origin+window.location.pathname+"?config="+JSON.stringify(o.Z)}),500))},init:(t=!0)=>{h=t;const i=n()(window.location.search,!0);let e={};i.query.config&&(e=JSON.parse(i.query.config)),Object.assign(o.Z,e),r()}}},897:(t,i,e)=>{e.r(i),e.d(i,{default:()=>u}),e(896);var o=e(376),s=e(247),n=e(891),h=(e(619),e(821)),r=e(529),a=e.n(r),l=e(429),c=e.n(l);const g=class{constructor(t,i,e,o=!1){if("string"==typeof t){const{red:i,green:e,blue:o}=(0,h.Z)(t);this._r=i,this._g=e,this._b=o}else t.length?(this._r=t[0],this._g=t[1],this._b=t[2]):o?(this._hue=t,this._saturation=i,this.lightness=e):(this._r=t,this._g=i,this._b=e);this._updateHSL()}_updateRGB(){const t=c()(this._hue,this._saturation,this._lightness);this._r=t[0],this._g=t[1],this._b=t[2]}_updateHSL(){const t=a()(this._r,this._g,this._b);this._hue=t[0],this._saturation=parseFloat(t[1].split("%")[0])/100,this._lightness=parseFloat(t[2].split("%")[0])/100}set r(t){this._r=t,this._updateHSL()}get r(){return this._r}set g(t){this._g=t,this._updateHSL()}get g(){return this._g}set b(t){this._b=t,this._updateHSL()}get b(){return this._b}set hue(t){this._hue=t,this._updateRGB()}get hue(){return this._hue}set saturation(t){this._saturation=t,this._updateRGB()}get saturation(){return this._saturation}set lightness(t){this._lightness=t,this._updateRGB()}get lightness(){return this._lightness}get hex(){return 0}get value(){return[this._r,this._g,this._b]}set value(t){this._r=t[0],this._g=t[1],this.b=t[2]}get glsl(){return[this._r,this._g,this._b].map((t=>t/255))}},_={red:{colorBg:[205,48,0],colorShadow:[24,35,29],colorPetal:[3,97.5,70]},green:{colorBg:[31,85,29],colorShadow:[145,105,13],colorPetal:[240,200,15]},white:{colorBg:[11,12,12],colorShadow:[9,6,4],colorPetal:[236,229,219]},dark:{colorBg:[244,244,243],colorShadow:[41,41,41],colorPetal:[30,30,30]}},u=t=>{const{refresh:i,reload:e}=n.default,h=new g(s.Z.colorBg),r=new g(s.Z.colorShadow),a=new g(s.Z.colorPetal),l=[];for(let t in _)l.push(t);const c=new o.XS({width:300});window.gui=c,c.add(s.Z,"colorTheme",l).onFinishChange((()=>{const t=_[s.Z.colorTheme];console.log(t);for(const i in t)s.Z[i]=t[i];h.value=s.Z.colorBg,r.value=s.Z.colorShadow,a.value=s.Z.colorPetal,i()})),c.add(s.Z,"numParticles",[128,144,192,256,384,512]).onFinishChange(e)}}}]);